static void HoareSort(int[] array, int start, int end)
{
    if (end == start) return; // применение оператора if, который выбирает оператор, который нужно выполнить, на основе значения логического выражения.
    var pivot = array[end]; // объявляние переменной и присвоение ей массива end
    var storeIndex = start; // объявляние переменной и присвоение ей лок.переменной start
    for (int i = start; i <= end - 1; i++) // применение оператора for, который выполняет тело, а заданное логическое выражение принимает значение frue
        if (array[i] <= pivot) // применение оператора if, который выбирает оператор, который нужно выполнить, на основе значения логического выражения.
        {
            var t = array[i]; // объявляние переменной и присвоение ей массива зависящего от i
            array[i] = array[storeIndex]; // присвоение массиву другого масива, зависящего от другой переменной
            array[storeIndex] = t; //присвоение массиву зависящего от лок.значения значения t
            storeIndex++; // постепенное увеличение значения переменной
        }

    var n = array[storeIndex]; // объявляние переменной и присвоение ей массива зависящего от storeindex
    array[storeIndex] = array[end]; // присвоение массиву другого масива, зависящего от другой переменной
    array[end] = n;  //присвоение массиву зависящего от лок.значения значения n
    if (storeIndex > start) HoareSort(array, start, storeIndex - 1); // применение оператора if, который выбирает оператор, который нужно выполнить, на основе значения логического выражения.
    if (storeIndex < end) HoareSort(array, storeIndex + 1, end); // применение оператора if, который выбирает оператор, который нужно выполнить, на основе значения логического выражения.
}

static void HoareSort(int[] array)
{
    HoareSort(array, 0, array.Length - 1); // применение метода сортировки слиянием
}

static Random random = new Random();

public static void Main()
static void HoareSort(int[] array, int start, int end)
{
    if (end == start) return; // применение оператора if, который выбирает оператор, который нужно выполнить, на основе значения логического выражения.
    var pivot = array[end]; // объявляние переменной и присвоение ей массива end
    var storeIndex = start; // объявляние переменной и присвоение ей лок.переменной start
    for (int i = start; i <= end - 1; i++) // применение оператора for, который выполняет тело, а заданное логическое выражение принимает значение frue
        if (array[i] <= pivot) // применение оператора if, который выбирает оператор, который нужно выполнить, на основе значения логического выражения.
        {
            var t = array[i]; // объявляние переменной и присвоение ей массива зависящего от i
            array[i] = array[storeIndex]; // присвоение массиву другого масива, зависящего от другой переменной
            array[storeIndex] = t; //присвоение массиву зависящего от лок.значения значения t
            storeIndex++; // постепенное увеличение значения переменной
        }

    var n = array[storeIndex]; // объявляние переменной и присвоение ей массива зависящего от storeindex
    array[storeIndex] = array[end]; // присвоение массиву другого масива, зависящего от другой переменной
    array[end] = n; //присвоение массиву зависящего от лок.значения значения n
    if (storeIndex > start) HoareSort(array, start, storeIndex - 1); // применение оператора if, который выбирает оператор, который нужно выполнить, на основе значения логического выражения.
    if (storeIndex < end) HoareSort(array, storeIndex + 1, end); // применение оператора if, который выбирает оператор, который нужно выполнить, на основе значения логического выражения.
}

static void HoareSort(int[] array)
{
    HoareSort(array, 0, array.Length - 1); // применение метода сортировки слиянием
}

static Random random = new Random();

public static void Main()
{
    int[] array = {
        3,
        2,
        5,
        7,
        8,
        1,
        9
    }; // объявление массива
    HoareSort(array); //сортировка массива слиянием
    foreach (var e in array) // применение оператора foreach, который перечисляет элементы коллекции и выполняет тело для каждого элемента коллекции.
        Console.WriteLine(e); // вывод на экран указанного значения
    Console.ReadKey();
}
